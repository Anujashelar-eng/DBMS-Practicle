CREATE TABLE Employee (
    emp_no NUMBER PRIMARY KEY,
    name VARCHAR2(50),
    skill VARCHAR2(50),
    pay_rate NUMBER(10, 2)
);

CREATE TABLE Position (
    posting_no NUMBER PRIMARY KEY,
    skill VARCHAR2(50)
);

CREATE TABLE Duty_allocation (
    posting_no NUMBER REFERENCES Position(posting_no),
    emp_no NUMBER REFERENCES Employee(emp_no),
    day DATE,
    shift VARCHAR2(20),
    PRIMARY KEY (posting_no, emp_no, day, shift)
);

INSERT ALL
    INTO Employee (emp_no, name, skill, pay_rate) VALUES (123456, 'Alice', 'Chef', 30000)
    INTO Employee (emp_no, name, skill, pay_rate) VALUES (123457, 'Bob', 'Chef', 28000)
    INTO Employee (emp_no, name, skill, pay_rate) VALUES (123458, 'Charlie', 'Manager', 50000)
    INTO Employee (emp_no, name, skill, pay_rate) VALUES (123459, 'David', 'Chef', 27000)
    INTO Employee (emp_no, name, skill, pay_rate) VALUES (123460, 'Eve', 'Cook', 25000)
    INTO Employee (emp_no, name, skill, pay_rate) VALUES (123461, 'Frank', 'Waiter', 22000)
    INTO Employee (emp_no, name, skill, pay_rate) VALUES (123462, 'Grace', 'Manager', 60000)
    INTO Employee (emp_no, name, skill, pay_rate) VALUES (123463, 'xyz', 'Waiter', 24000)
SELECT * FROM dual;

INSERT ALL
    INTO Position (posting_no, skill) VALUES (1, 'Chef')
    INTO Position (posting_no, skill) VALUES (2, 'Waiter')
    INTO Position (posting_no, skill) VALUES (3, 'Manager')
    INTO Position (posting_no, skill) VALUES (4, 'Chef')
    INTO Position (posting_no, skill) VALUES (5, 'Cook')
SELECT * FROM dual;

-- Assignments for Frank (emp_no: 123461) in April 1986
INSERT ALL
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (1, 123461, TO_DATE('1986-04-10', 'YYYY-MM-DD'), 'Morning')
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (2, 123461, TO_DATE('1986-04-15', 'YYYY-MM-DD'), 'Evening')
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (3, 123461, TO_DATE('1986-04-20', 'YYYY-MM-DD'), 'Night')
SELECT * FROM dual;
-- Assignments for other employees
INSERT ALL
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (1, 123456, TO_DATE('1986-03-01', 'YYYY-MM-DD'), 'Morning')
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (2, 123457, TO_DATE('1986-03-02', 'YYYY-MM-DD'), 'Night')
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (3, 123458, TO_DATE('1986-03-10', 'YYYY-MM-DD'), 'Evening')
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (1, 123459, TO_DATE('1986-03-20', 'YYYY-MM-DD'), 'Morning')
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (5, 123460, TO_DATE('1986-03-25', 'YYYY-MM-DD'), 'Evening')
    INTO Duty_allocation (posting_no, emp_no, day, shift) VALUES (2, 123463, TO_DATE('1986-04-05', 'YYYY-MM-DD'), 'Night')
    SELECT * FROM dual;

--Query 1
SELECT *
FROM Duty_allocation
WHERE emp_no = 123461
  AND TO_CHAR(day, 'MM-YYYY') = '04-1986';

--Query 2
SELECT da.shift, da.day
FROM Duty_allocation da
JOIN Employee e ON da.emp_no = e.emp_no
WHERE e.name = 'xyz';

--Query 3
SELECT e1.emp_no, e1.name, e1.skill, e1.pay_rate
FROM Employee e1
JOIN Employee e2 ON e2.name = 'xyz'
WHERE e1.pay_rate >= e2.pay_rate;

--Query 4
SELECT e1.name, e1.pay_rate
FROM Employee e1
WHERE e1.emp_no < 123460
  AND e1.pay_rate > (
        SELECT MIN(e2.pay_rate)
        FROM Employee e2
        WHERE e2.emp_no >= 123460
      );

--Query 5
SELECT e.name
FROM Employee e
JOIN Position p ON p.skill = 'Chef'
LEFT JOIN Duty_allocation da ON da.emp_no = e.emp_no AND da.posting_no = p.posting_no
GROUP BY e.emp_no, e.name
HAVING COUNT(p.posting_no) = (
          SELECT COUNT(*)
          FROM Position
          WHERE skill = 'Chef'
      );

--Query 6
SELECT emp_no, name, skill, pay_rate
FROM Employee
WHERE pay_rate = (SELECT MIN(pay_rate) FROM Employee);

--Query 7
SELECT emp_no
FROM Duty_allocation
GROUP BY emp_no
HAVING COUNT(DISTINCT day) >= 2;

--Query 8
SELECT DISTINCT e.name
FROM Employee e
JOIN Duty_allocation da ON e.emp_no = da.emp_no
WHERE e.skill = 'Chef';

-- Query 9
SELECT e.emp_no, e.name
FROM Employee e
LEFT JOIN Duty_allocation da ON e.emp_no = da.emp_no
WHERE da.emp_no IS NULL;

--Query 10
SELECT shift, COUNT(DISTINCT emp_no) AS employee_count
FROM Duty_allocation
GROUP BY shift;
